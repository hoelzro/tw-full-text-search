title: $:/plugins/hoelzro/full-text-search/control-panel
type: text/vnd.tiddlywiki
tags: $:/tags/ControlPanel
caption: Full Text Configuration

<$set name="state" value="$:/temp/FTS-state">

<$reveal type="match" state=<<state>> text="uninitialized">

In order to use full text search, you'll need to generate an index.

<$button>
  Click here to generate the index
  <$fts-action-generate-index />
</$button>

</$reveal>

<$reveal type="match" state=<<state>> text="initializing">
Generating index...

<$hoelzro-progressbar current={{$:/temp/FTS-state!!progressCurrent}} total={{$:/temp/FTS-state!!progressTotal}} />
</$reveal>

<$reveal type="match" state=<<state>> text="initialized">

Index generated.  Happy searching!

<$button>
  Click here to rebuild the index
  <$fts-action-generate-index rebuild="true" />
</$button>

</$reveal>

! Auto Indexing

<$list variable="fiveSixteenOrBetter" filter="5.1.16 [title<version>] +[sort[]first[]] +[prefix[5.1.16]]" emptyMessage="Sorry, you need TiddlyWiki 5.1.16 or greater to enable auto-indexing.">

<$set name="autoIndexTiddler" value="$:/plugins/hoelzro/full-text-seach/auto-index">

Automatic indexing refers to a feature where your wiki is automatically indexed in the background after it's been loaded.

<$list filter="[title<autoIndexTiddler>get[title]]" emptyMessage="""<$button><$action-createtiddler $basetitle=<<autoIndexTiddler>> text="<$fts-action-generate-index />" tags="$:/tags/StartupAction/Browser" />Click here to enable automatic indexing</$button>""">
<$button>
  <$action-deletetiddler $tiddler=<<autoIndexTiddler>> />
  Click here to disable automatic indexing
</$button>
</$list>

</$set>
</$list>

! Wildcard/Fuzzy Searching (experimental)

Wildcard searches allow you to use wildcards to do things like use `format*ing` to match both "formating" and "formatting".
Please consult [[the lunr documentation|https://lunrjs.com/guides/searching.html#wildcards]] for more information.

Fuzzy searches allow you to compensate for spelling mistakes by specifying an //edit distance// - for example, if you want
to tolerate being off by one character, you'd searching for `formattign~1`.  For performance, it's recommended to keep
the distance below 3.  You can read more about fuzzy searching in [[the lunr documentation|https://lunrjs.com/guides/searching.html#fuzzy-matches]].

Note that you don't need wildcards to have the search system treat "format", "formatting", and "formatted" as the same -
the default setup is smart enough to handle this!

Enabling wildcard and fuzzy searches takes more computing power, memory, and storage space, but does prove useful for various users.  If
you'd like to try wildcard searches, you can enable them here:

<$checkbox tiddler="$:/plugins/hoelzro/full-text-search/EnableFuzzySearching" field="text" checked="yes" unchecked="" default="">
Enable wildcard/fuzzy searches? (this will require an index rebuild)
</$checkbox>

</$set>
